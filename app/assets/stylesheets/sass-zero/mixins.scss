@import "sass-zero/variables/border";
@import "sass-zero/variables/effects";
@import "sass-zero/variables/spacing";

@mixin ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin subpixel-antialiased {
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}

@mixin clearfix {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}

@mixin checked {
  border-color: transparent;
  background-color: currentColor;
  background-position: center;
  background-repeat: no-repeat;
}

@mixin space-x($space, $reverse: false) {
  & > :not(template) ~ :not(template) {
    @if $reverse {
      margin-right: $space;
    } @else {
      margin-left: $space;
    }
  }
}

@mixin space-y($space, $reverse: false) {
  & > :not(template) ~ :not(template) {
    @if $reverse {
      margin-bottom: $space;
    } @else {
      margin-top: $space;
    }
  }
}

@mixin make-container($padding-x, $max-width) {
  width: 100%;
  padding-right: $padding-x;
  padding-left: $padding-x;
  margin-right: $size-auto;
  margin-left:  $size-auto;
  max-width: $max-width;
}

@mixin input-selection($color) {
  appearance: none;
  border-width: $border;
  color: $color;
  margin-bottom: -0.1rem;
  height: $size-4;
  width: $size-4;
}

@mixin ring($width: $ring, $color: $blue-500, $offset-width: 0px, $offset-color: #fff, $opacity: 0.5, $inset: false)  {
  $ring-color: rgba($color, $opacity);

  @if $inset {
    $ring-offset-shadow: inset 0 0 0 $offset-width $offset-color;
    $ring-shadow: inset 0 0 0 ($width + $offset-width) $ring-color;
    box-shadow: $ring-offset-shadow, $ring-shadow, 0 0 #0000;
  } @else {
    $ring-offset-shadow: 0 0 0 $offset-width $offset-color;
    $ring-shadow: 0 0 0 ($width + $offset-width) $ring-color;
    box-shadow: $ring-offset-shadow, $ring-shadow, 0 0 #0000;
  }
}
